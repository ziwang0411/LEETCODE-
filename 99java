/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeNode first = null;
    TreeNode second = null;
    TreeNode prev = null;
    public void recoverTree(TreeNode root) {
        inorder(root);
        swap(first, second);
        
    }
    
    private void inorder(TreeNode curr) {
        if (curr==null) return;
        
        inorder(curr.left);
        if (prev!=null && prev.val>curr.val) {
            if (first==null) {
                first = prev;
                second = curr;
            } else {
                second = curr;
            }
        }
        prev = curr;
        inorder(curr.right);
    }
    private void swap(TreeNode first, TreeNode second) {
        int temp = second.val;
        second.val= first.val;
        first.val=temp;
    }
}